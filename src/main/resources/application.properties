#PROD
#spring.profiles.active=prod
#DEV
spring.profiles.active=dev

# Pour corriger l'erreur : [org.hibernate.LazyInitializationException: could not initialize proxy - no Session]
spring.jpa.properties.hibernate.enable_lazy_load_no_trans=true

#------------------------------------
#file logging
#logging.file=contactwebmanager.log
#logging.path = logs

#-----------------------------------
#As of Spring Boot 2.0 (due to the support of both Spring MVC and Spring WebFlux) the contextPath has been changed to the following:
#server.servlet.contextPath=/contactmanager
server.port=8090

#------------------------------------
#spring.thymeleaf.mode=HTML5
#spring.thymeleaf.cache=false
#------------------------------------
Datasource Config
#-------------------------
spring.datasource.hikari.initial-size=15
# Number of ms to wait before throwing an exception if no connection is available.
spring.datasource.hikari.max-wait=20000
# Maximum number of active connections that can be allocated from this pool at the same time.
spring.datasource.hikari.max-active=50
spring.datasource.hikari.max-idle=15
spring.datasource.hikari.min-idle=8
spring.datasource.hikari.default-auto-commit=true
spring.datasource.hikari.connectionTimeout=30000
spring.datasource.hikari.idleTimeout=600000
spring.datasource.hikari.maxLifetime=1800000   

#-----------------------------
#Exposing Actuator endpoints over HTTP
# Use "*" to expose all endpoints, or a comma-separated list to expose selected ones
management.endpoints.web.exposure.include=health,info,metrics,httptrace,env,auditevents,mappings,scheduledtasks,threaddump,liquidbase,heapdump
management.endpoints.web.exposure.exclude=

#Exposing Actuator endpoints over JMX
# Use "*" to expose all endpoints, or a comma-separated list to expose selected ones
management.endpoints.jmx.exposure.include=*
management.endpoints.jmx.exposure.exclude=


# ==============================================================
# = Spring Security / Queries for AuthenticationManagerBuilder  
# ==============================================================
spring.queries.users-query=select email, password, active from user where email=?
spring.queries.roles-query=select u.email, r.role from user u inner join user_role ur on(u.user_id=ur.user_id) inner join role r on(ur.role_id=r.role_id) where u.email=?
